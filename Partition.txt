#takes integer as an input from the user and prints the partitions of the number
n = int(input('Enter a number to find the partitions of: '))
set1 = []
for i in range(1,n+1):
    for j in range(1,n+1):
        set1.append(j)
set2 = []
for i in range(1,n+1):
    comb = combinations (set1, i)
    for j in comb:
        if sum(j) == n:
            set2.append(j)      
set3 = []
for i in set2:
    set3.append(sorted(i))
set4 = []
for x in set3:
    if x not in set4:
        set4.append(x)
print ("There are",len(set4)," possible partitions for the given number.")

#takes integer as an input from the user and prints the partitions of the number with distinct summands
def partitions (n, k=1, parts=[]):
    if n == 0:
        print(parts)
        return
    for i in range(k, n+1):
        if i not in parts:
            partitions (n-i, i+1, parts+[i])
partitions(4)

#takes integer as an input from the user and lists out the partitions of the number with similar summands
def partitions (n, k=1, parts=[]):
    if n == 0:
        if not parts or len(parts) == 1 or parts [-1] == parts[-2]: 
            print(parts)
        return
    for i in range(k, n+1): 
        if not parts or i <= parts[-1]: 
            partitions (n-i, i, parts+[i])
partitions (4)

#takes integer as an input from the user and lists out the partitions of the number which have only odd summands
def partitions(n, k=1, parts=[]):
    if n == 0:
        if all(x % 2 == 1 for x in parts): 
            print(parts)
        return
    for i in range(k, n+1): 
        if not parts or i <= parts [-1]: 
            partitions (n-i, i, parts+[i])
partitions(4)

#takes integer as an input from the user and lists out the partitions of the number which have only even summands
def partitions (n, k=1, parts=[]):
    if n == 0: 
        if all(x % 2 == 0 for x in parts): 
            print(parts)
        return
    for i in range(k, n+1): 
        if not parts or i <= parts [-1]: 
            partitions (n-i, i, parts+[i])
partitions(4)

